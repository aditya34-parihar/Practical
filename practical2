DROP TABLE IF EXISTS StudentEnrollments;

CREATE TABLE StudentEnrollments (
    enrollment_id INT AUTO_INCREMENT PRIMARY KEY,
    student_name VARCHAR(100) NOT NULL,
    course_id VARCHAR(10) NOT NULL,
    enrollment_date DATE NOT NULL,
    UNIQUE (student_name, course_id)
);

-- Initial Inserts (all unique)
INSERT INTO StudentEnrollments (student_name, course_id, enrollment_date)
VALUES 
('Ashish', 'CSE101', '2024-07-01'),
('Smaran', 'CSE102', '2024-07-01'),
('Vaibhav', 'CSE101', '2024-07-01');

-- ❌ Remove the duplicate insert
-- ❌ This line caused the error and is now removed:
-- INSERT INTO StudentEnrollments (student_name, course_id, enrollment_date)
-- VALUES ('Ashish', 'CSE101', '2024-07-02');

-- ✅ Instead, let's update the existing record for Ashish in CSE101
START TRANSACTION;
UPDATE StudentEnrollments
SET enrollment_date = '2024-07-02'
WHERE student_name = 'Ashish' AND course_id = 'CSE101';
COMMIT;

-- ✅ Lock and then update the same record (this part was correct in logic)
START TRANSACTION;
SELECT * FROM StudentEnrollments
WHERE student_name = 'Ashish' AND course_id = 'CSE101'
FOR UPDATE;

UPDATE StudentEnrollments
SET enrollment_date = '2024-07-05'
WHERE student_name = 'Ashish' AND course_id = 'CSE101';

COMMIT;

-- ✅ Further updates
START TRANSACTION;
UPDATE StudentEnrollments
SET enrollment_date = '2024-07-10'
WHERE student_name = 'Ashish' AND course_id = 'CSE101';
COMMIT;

START TRANSACTION;
UPDATE StudentEnrollments
SET enrollment_date = '2024-07-15'
WHERE student_name = 'Ashish' AND course_id = 'CSE101';
COMMIT;

-- ✅ Final result
SELECT * FROM StudentEnrollments;
